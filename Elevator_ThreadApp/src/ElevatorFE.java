
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author cammy
 */
public class ElevatorFE extends javax.swing.JFrame {

    /**
     * Creates new form ElevatorFE
     */
    public ElevatorFE() {
        initComponents();
        
        myElevator.start();
        person1.start();
        person2.start();
        person3.start();
        person4.start();
        person5.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        elevatorCall = new javax.swing.JButton();
        person1Call = new javax.swing.JButton();
        person2Call = new javax.swing.JButton();
        person3Call = new javax.swing.JButton();
        person4Call = new javax.swing.JButton();
        person5Call = new javax.swing.JButton();
        p1NextFloor = new javax.swing.JTextField();
        p2NextFloor = new javax.swing.JTextField();
        p3NextFloor = new javax.swing.JTextField();
        p4NextFloor = new javax.swing.JTextField();
        p5NextFloor = new javax.swing.JTextField();
        p1GO = new javax.swing.JButton();
        p2GO = new javax.swing.JButton();
        p3GO = new javax.swing.JButton();
        p4GO = new javax.swing.JButton();
        p5GO = new javax.swing.JButton();
        elevatorStop = new javax.swing.JButton();
        p1Status = new javax.swing.JTextField();
        p2Status = new javax.swing.JTextField();
        p3Status = new javax.swing.JTextField();
        p4Status = new javax.swing.JTextField();
        p5Status = new javax.swing.JTextField();
        elevatorStatus = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        warningLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        elevatorCall.setText("Call Elevator");
        elevatorCall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elevatorCallActionPerformed(evt);
            }
        });

        person1Call.setText("Person1");
        person1Call.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                person1CallActionPerformed(evt);
            }
        });

        person2Call.setText("Person2");
        person2Call.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                person2CallActionPerformed(evt);
            }
        });

        person3Call.setText("Person3");
        person3Call.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                person3CallActionPerformed(evt);
            }
        });

        person4Call.setText("Person4");
        person4Call.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                person4CallActionPerformed(evt);
            }
        });

        person5Call.setText("Person5");
        person5Call.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                person5CallActionPerformed(evt);
            }
        });

        p1NextFloor.setText("NextFloor");

        p2NextFloor.setText("NextFloor");

        p3NextFloor.setText("NextFloor");

        p4NextFloor.setText("NextFloor");

        p5NextFloor.setText("NextFloor");

        p1GO.setText("GO");
        p1GO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p1GOActionPerformed(evt);
            }
        });

        p2GO.setText("GO");
        p2GO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p2GOActionPerformed(evt);
            }
        });

        p3GO.setText("GO");
        p3GO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p3GOActionPerformed(evt);
            }
        });

        p4GO.setText("GO");
        p4GO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p4GOActionPerformed(evt);
            }
        });

        p5GO.setText("GO");
        p5GO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p5GOActionPerformed(evt);
            }
        });

        elevatorStop.setText("Stop Elevator");
        elevatorStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elevatorStopActionPerformed(evt);
            }
        });

        p1Status.setText("Status");

        p2Status.setText("Status");

        p3Status.setText("Status");

        p4Status.setText("Status");

        p5Status.setText("Status");

        elevatorStatus.setText("Elevator Status");

        jProgressBar1.setMaximum(11);

        warningLabel.setText("  ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(elevatorCall)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(elevatorStop)
                                .addGap(18, 18, 18)
                                .addComponent(elevatorStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(person2Call)
                                .addGap(18, 18, 18)
                                .addComponent(p2NextFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(p2GO)
                                .addGap(18, 18, 18)
                                .addComponent(p2Status))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(person1Call)
                                .addGap(18, 18, 18)
                                .addComponent(p1NextFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(p1GO)
                                .addGap(18, 18, 18)
                                .addComponent(p1Status, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(person3Call)
                                .addGap(18, 18, 18)
                                .addComponent(p3NextFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(p3GO)
                                .addGap(18, 18, 18)
                                .addComponent(p3Status))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(person4Call)
                                .addGap(18, 18, 18)
                                .addComponent(p4NextFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(p4GO)
                                .addGap(18, 18, 18)
                                .addComponent(p4Status))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(person5Call)
                                .addGap(18, 18, 18)
                                .addComponent(p5NextFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(p5GO)
                                .addGap(18, 18, 18)
                                .addComponent(p5Status, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(warningLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(warningLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(person1Call)
                    .addComponent(p1NextFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p1GO)
                    .addComponent(p1Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(person2Call)
                    .addComponent(p2NextFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p2GO)
                    .addComponent(p2Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(person3Call)
                    .addComponent(p3NextFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p3GO)
                    .addComponent(p3Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(person4Call)
                    .addComponent(p4NextFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p4GO)
                    .addComponent(p4Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(person5Call)
                    .addComponent(p5NextFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p5GO)
                    .addComponent(p5Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(elevatorCall)
                    .addComponent(elevatorStop)
                    .addComponent(elevatorStatus))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void elevatorStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elevatorStopActionPerformed
        // TODO add your handling code here:
        myElevator.stopElevator();
    }//GEN-LAST:event_elevatorStopActionPerformed

    private void person1CallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_person1CallActionPerformed
        // TODO add your handling code here:
        person1.callElevator();
    }//GEN-LAST:event_person1CallActionPerformed

    private void p1GOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p1GOActionPerformed
        // TODO add your handling code here:
        if (p1NextFloor.getText().matches(".*[a-z].*") == false && p1NextFloor.getText().length() > 0){
            int destFloor = Integer.parseInt(p1NextFloor.getText());
            warningLabel.setText("");
            if (destFloor > 0 && destFloor < 12){
                person1.setDestinationFloor(destFloor);
                warningLabel.setText("");
            } else{
                warningLabel.setText("Please enter a valid floor (between 1-11)");
            }
        } else{
            warningLabel.setText("Please enter a valid floor (between 1-11)");
        }
    }//GEN-LAST:event_p1GOActionPerformed

    private void person2CallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_person2CallActionPerformed
        // TODO add your handling code here:
        person2.callElevator();
    }//GEN-LAST:event_person2CallActionPerformed

    private void p2GOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p2GOActionPerformed
        // TODO add your handling code here:
        if (p2NextFloor.getText().matches(".*[a-z].*") == false && p2NextFloor.getText().length() > 0){
            int destFloor = Integer.parseInt(p2NextFloor.getText());
            warningLabel.setText("");
            if (destFloor > 0 && destFloor < 12){
                person2.setDestinationFloor(destFloor);
                warningLabel.setText("");
            } else{
                warningLabel.setText("Please enter a valid floor (between 1-11)");
            }
        } else{
            warningLabel.setText("Please enter a valid floor (between 1-11)");
        }
    }//GEN-LAST:event_p2GOActionPerformed

    private void elevatorCallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elevatorCallActionPerformed

        myElevator.setWasCalled(0, true, 1);
        
    }//GEN-LAST:event_elevatorCallActionPerformed

    private void person3CallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_person3CallActionPerformed
        // TODO add your handling code here:
        person3.callElevator();
    }//GEN-LAST:event_person3CallActionPerformed

    private void person4CallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_person4CallActionPerformed
        // TODO add your handling code here:
        person4.callElevator();
    }//GEN-LAST:event_person4CallActionPerformed

    private void person5CallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_person5CallActionPerformed
        // TODO add your handling code here:
        person5.callElevator();
    }//GEN-LAST:event_person5CallActionPerformed

    private void p3GOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p3GOActionPerformed
        // TODO add your handling code here:
        if (p3NextFloor.getText().matches(".*[a-z].*") == false && p3NextFloor.getText().length() > 0){
            int destFloor = Integer.parseInt(p3NextFloor.getText());
            warningLabel.setText("");
            if (destFloor > 0 && destFloor < 12){
                person3.setDestinationFloor(destFloor);
                warningLabel.setText("");
            } else{
                warningLabel.setText("Please enter a valid floor (between 1-11)");
            }
        } else{
            warningLabel.setText("Please enter a valid floor (between 1-11)");
        }
    }//GEN-LAST:event_p3GOActionPerformed

    private void p4GOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p4GOActionPerformed
        // TODO add your handling code here:
        if (p4NextFloor.getText().matches(".*[a-z].*") == false && p4NextFloor.getText().length() > 0){
            int destFloor = Integer.parseInt(p4NextFloor.getText());
            warningLabel.setText("");
            if (destFloor > 0 && destFloor < 12){
                person4.setDestinationFloor(destFloor);
                warningLabel.setText("");
            } else{
                warningLabel.setText("Please enter a valid floor (between 1-11)");
            }
        } else{
            warningLabel.setText("Please enter a valid floor (between 1-11)");
        }
    }//GEN-LAST:event_p4GOActionPerformed

    private void p5GOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p5GOActionPerformed
        // TODO add your handling code here:
        if (p5NextFloor.getText().matches(".*[a-z].*") == false && p5NextFloor.getText().length() > 0){
            int destFloor = Integer.parseInt(p5NextFloor.getText());
            warningLabel.setText("");
            if (destFloor > 0 && destFloor < 12){
                person5.setDestinationFloor(destFloor);
                warningLabel.setText("");
            } else{
                warningLabel.setText("Please enter a valid floor (between 1-11)");
            }
        } else{
            warningLabel.setText("Please enter a valid floor (between 1-11)");
        }
    }//GEN-LAST:event_p5GOActionPerformed
                                    

    public boolean continueRunning()
    {
        return continueToRun;
    }
    
    public void updateElevatorStatus(int floor, String s)
    {
        // TO DO....need to add code here to mark floor and erase all other floors
        jProgressBar1.setValue(floor);
        jProgressBar1.setStringPainted(true);
        jProgressBar1.setString(Integer.toString(floor));
        elevatorStatus.setText(s);
    }
    
     public void updatePersonStatus(int id, String s)
    {
        // TO DO....based on respective id, update person text with string s
        switch(id){
            case 1:
                p1Status.setText(s);
                break;
            case 2:
                p2Status.setText(s);
                break;
            case 3:
                p3Status.setText(s);
                break;
            case 4:
                p4Status.setText(s);
                break;
            case 5:
                p5Status.setText(s);
                break;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ElevatorFE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ElevatorFE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ElevatorFE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ElevatorFE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ElevatorFE().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton elevatorCall;
    private javax.swing.JLabel elevatorStatus;
    private javax.swing.JButton elevatorStop;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JButton p1GO;
    private javax.swing.JTextField p1NextFloor;
    private javax.swing.JTextField p1Status;
    private javax.swing.JButton p2GO;
    private javax.swing.JTextField p2NextFloor;
    private javax.swing.JTextField p2Status;
    private javax.swing.JButton p3GO;
    private javax.swing.JTextField p3NextFloor;
    private javax.swing.JTextField p3Status;
    private javax.swing.JButton p4GO;
    private javax.swing.JTextField p4NextFloor;
    private javax.swing.JTextField p4Status;
    private javax.swing.JButton p5GO;
    private javax.swing.JTextField p5NextFloor;
    private javax.swing.JTextField p5Status;
    private javax.swing.JButton person1Call;
    private javax.swing.JButton person2Call;
    private javax.swing.JButton person3Call;
    private javax.swing.JButton person4Call;
    private javax.swing.JButton person5Call;
    private javax.swing.JLabel warningLabel;
    // End of variables declaration//GEN-END:variables

    private boolean continueToRun = true;
    private Elevator myElevator = new Elevator(this);
    private Person person1 = new Person(1, this, myElevator);
    private Person person2 = new Person(2, this, myElevator);
    private Person person3 = new Person(3, this, myElevator);
    private Person person4 = new Person(4, this, myElevator);
    private Person person5 = new Person(5, this, myElevator);
}
